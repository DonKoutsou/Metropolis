[gd_resource type="ShaderMaterial" load_steps=23 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeVectorFunc" id=3]

[sub_resource type="VisualShaderNodeTransformVecMult" id=4]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "world"

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=7]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeVectorLen" id=11]

[sub_resource type="VisualShaderNodeVec3Uniform" id=12]
uniform_name = "player_position"
default_value = Vector3( 1, 0, 0 )

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=13]
default_input_values = [ 0, 5.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=15]
uniform_name = "Radius"
default_value_enabled = true
default_value = 5.0

[sub_resource type="VisualShaderNodeScalarUniform" id=21]
uniform_name = "Force"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeVectorOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=17]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorOp" id=19]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=20]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode cull_disabled, diffuse_lambert_wrap, specular_schlick_ggx, async_visible, shadows_disabled;

uniform float Force = 1;
uniform float Radius = 5;
uniform vec3 player_position;
uniform vec4 ColorUniform : hint_color;



void vertex() {
// Input:14
	vec3 n_out14p0 = VERTEX;

// ScalarUniform:24
	float n_out24p0 = Force;

// ScalarUniform:23
	float n_out23p0 = Radius;

// Input:6
	mat4 n_out6p0 = WORLD_MATRIX;

// Input:3
	vec3 n_out3p0 = VERTEX;

// TransformVectorMult:5
	vec3 n_out5p0 = (n_out6p0 * vec4(n_out3p0, 1.0)).xyz;

// VectorUniform:2
	vec3 n_out2p0 = player_position;

// VectorOp:7
	vec3 n_out7p0 = n_out5p0 - n_out2p0;

// VectorLen:19
	float n_out19p0 = length(n_out7p0);

// ScalarSmoothStep:20
	float n_in20p1 = 0.00000;
	float n_out20p0 = smoothstep(n_out23p0, n_in20p1, n_out19p0);

// Input:13
	mat4 n_out13p0 = WORLD_MATRIX;

// VectorOp:9
	vec3 n_in9p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out9p0 = n_out7p0 * n_in9p1;

// VectorFunc:11
	vec3 n_out11p0 = normalize(n_out9p0);

// TransformVectorMult:12
	vec3 n_out12p0 = (vec4(n_out11p0, 1.0) * n_out13p0).xyz;

// Input:16
	vec3 n_out16p0 = vec3(UV, 0.0);

// VectorDecompose:17
	float n_out17p0 = n_out16p0.x;
	float n_out17p1 = n_out16p0.y;
	float n_out17p2 = n_out16p0.z;

// VectorOp:18
	vec3 n_out18p0 = n_out12p0 * vec3(n_out17p1);

// VectorOp:22
	vec3 n_out22p0 = vec3(n_out20p0) * n_out18p0;

// VectorOp:25
	vec3 n_out25p0 = vec3(n_out24p0) * n_out22p0;

// VectorOp:15
	vec3 n_out15p0 = n_out14p0 + n_out25p0;

// Output:0
	VERTEX = n_out15p0;

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = ColorUniform.rgb;
	float n_out2p1 = ColorUniform.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -106.776, -146.476 )
modes/cull = 2
modes/diffuse = 1
flags/shadows_disabled = true
nodes/vertex/0/position = Vector2( 1860, 20 )
nodes/vertex/2/node = SubResource( 12 )
nodes/vertex/2/position = Vector2( -280, 420 )
nodes/vertex/3/node = SubResource( 16 )
nodes/vertex/3/position = Vector2( -380, 160 )
nodes/vertex/5/node = SubResource( 17 )
nodes/vertex/5/position = Vector2( -140, 100 )
nodes/vertex/6/node = SubResource( 18 )
nodes/vertex/6/position = Vector2( -380, 60 )
nodes/vertex/7/node = SubResource( 19 )
nodes/vertex/7/position = Vector2( 40, 280 )
nodes/vertex/9/node = SubResource( 20 )
nodes/vertex/9/position = Vector2( 340, 360 )
nodes/vertex/11/node = SubResource( 3 )
nodes/vertex/11/position = Vector2( 520, 380 )
nodes/vertex/12/node = SubResource( 4 )
nodes/vertex/12/position = Vector2( 700, 260 )
nodes/vertex/13/node = SubResource( 5 )
nodes/vertex/13/position = Vector2( 440, 220 )
nodes/vertex/14/node = SubResource( 6 )
nodes/vertex/14/position = Vector2( 720, 140 )
nodes/vertex/15/node = SubResource( 7 )
nodes/vertex/15/position = Vector2( 1260, -20 )
nodes/vertex/16/node = SubResource( 8 )
nodes/vertex/16/position = Vector2( 560, 580 )
nodes/vertex/17/node = SubResource( 9 )
nodes/vertex/17/position = Vector2( 700, 660 )
nodes/vertex/18/node = SubResource( 10 )
nodes/vertex/18/position = Vector2( 880, 500 )
nodes/vertex/19/node = SubResource( 11 )
nodes/vertex/19/position = Vector2( 258.352, 142.247 )
nodes/vertex/20/node = SubResource( 13 )
nodes/vertex/20/position = Vector2( 560, -20 )
nodes/vertex/22/node = SubResource( 14 )
nodes/vertex/22/position = Vector2( 1100, 260 )
nodes/vertex/23/node = SubResource( 15 )
nodes/vertex/23/position = Vector2( 280, -220 )
nodes/vertex/24/node = SubResource( 21 )
nodes/vertex/24/position = Vector2( 920, 660 )
nodes/vertex/25/node = SubResource( 22 )
nodes/vertex/25/position = Vector2( 1220, 660 )
nodes/vertex/connections = PoolIntArray( 6, 0, 5, 0, 3, 0, 5, 1, 5, 0, 7, 0, 2, 0, 7, 1, 7, 0, 9, 0, 9, 0, 11, 0, 11, 0, 12, 1, 13, 0, 12, 0, 14, 0, 15, 0, 15, 0, 0, 0, 16, 0, 17, 0, 17, 1, 18, 1, 12, 0, 18, 0, 7, 0, 19, 0, 19, 0, 20, 2, 20, 0, 22, 0, 18, 0, 22, 1, 23, 0, 20, 0, 24, 0, 25, 0, 22, 0, 25, 1, 25, 0, 15, 1 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -80, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[resource]
shader = SubResource( 2 )
shader_param/Force = 0.422
shader_param/Radius = 5.0
shader_param/player_position = null
shader_param/ColorUniform = Color( 0.376471, 0.615686, 0.270588, 1 )
